#!/usr/bin/env zsh

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# #  Managed by Ansible                                                     # #
# #  DO NOT EDIT THIS FILE MANUALLY                                         # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Ctrl-C/V
# ========
# Освободить для терминала комбинации клавиш
# Ctrl+С/V, вместо Ctrl+C сделать Ctrl+Q.
# Не забыть в настройках терминала назначить
# на клавиши Ctrl+C/V вставку/копирование.

stty lnext undef  # освободить Ctrl+V
stty start undef  # освободить Ctrl+Q
stty intr ^Q      # вместо Ctrl+C сделать Ctrl+Q

# Алиасы
# ======

{% if aliases -%}
# Обычные алиасы (осуществляется замена только
# ПЕРВОГО СЛОВА командной строки)

{% for key, value in aliases | dictsort -%}
alias {{ key | e }}='{{ value | e }}'
{% endfor %}

{% endif -%}
{% if aliases_global -%}
# Глобальные алиасы (замена СЛОВА осуществляется
# в любом месте командной строки)

{% for key, value in aliases_global | dictsort -%}
alias -g {{ key | e }}='{{ value | e }}'
{% endfor %}

{% endif -%}
# История команд
# ==============

HISTSIZE=1000
SAVEHIST=1000
HISTFILE=${ZDOTDIR:-~}/.zsh_history

setopt append_history
setopt extended_history
setopt inc_append_history
setopt inc_append_history_time
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt hist_ignore_space

# Прочие параметры оболочки
# =========================

setopt auto_cd
setopt correct
setopt no_beep
setopt ignore_eof
setopt prompt_subst
setopt interactive_comments

# Цветной вывод команды ls
# ========================

if [[ "$TERM" != "dumb" ]]; then
  if [[ -x $(which dircolors) ]]; then
  eval $(dircolors -b)
  alias 'ls=ls --color=auto'
  fi
fi

# Красный курсор
# ==============

echo -ne "\e]12;red\a"

# vi-mode для командой строки
# ===========================
# + форма курсора в зависимости от режима

bindkey -v
KEYTIMEOUT=5

#bindkey -M vicmd 'k' history-substring-search-up
#bindkey -M vicmd 'j' history-substring-search-down

function zle-keymap-select {
  if [[ $KEYMAP == vicmd ]] || [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ $KEYMAP == main ]] || [[ $KEYMAP == viins ]] \
    || [[ $KEYMAP = '' ]] || [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() { zle-keymap-select 'beam'}

# zsh-автодополнение (autosuggestions)
# ====================================

# Клавиша перехода на следующее слово
bindkey '`' forward-word

# Цвет текста для автодополнения (по-умолчанию fg=8)
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=69'

# Дополнительные скрипты в ZSHRC_DIR
# ==================================

# Переменная ZHRC_DIR определяется в ~/.zshenv.
#
# Для выбора скриптов используются квалификаторы (Glob Qualifiers). Это дополнительные параметры шаблона,
# заключённые в круглые скобки в конце шаблона.
#   . - выбирать только файлы (plain files)
#   N - не выдавать ошибку, если ничего не найдено (аналог команды setopt +o nomatch)
# Подробнее в разделе 14.8.7 https://zsh.sourceforge.io/Doc/Release/Expansion.html#Filename-Generation

for file in $ZSHRC_DIR/*.zsh(.N); do
  source "$file"
done

# Менеджер плагинов
# =================
if [[ -s ${ZDOTDIR:-~}/.antidote/antidote.zsh ]]; then
  source ${ZDOTDIR:-~}/.antidote/antidote.zsh
  antidote load
fi
